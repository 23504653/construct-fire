

SET SESSION FOREIGN_KEY_CHECKS=0;

DROP DATABASE IF EXISTS camunda;

CREATE DATABASE camunda;

USE camunda;

DROP TABLE IF EXISTS WORKER_NODE;
CREATE TABLE WORKER_NODE
(
    ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'auto increment id',
    HOST_NAME VARCHAR(64) NOT NULL COMMENT 'host name',
    PORT VARCHAR(64) NOT NULL COMMENT 'port',
    TYPE INT NOT NULL COMMENT 'node type: CONTAINER(1), ACTUAL(2), FAKE(3)',
    LAUNCH_DATE DATE NOT NULL COMMENT 'launch date',
    MODIFIED TIMESTAMP NOT NULL COMMENT 'modified time',
    CREATED TIMESTAMP NOT NULL COMMENT 'created time',
    PRIMARY KEY(ID)
)
COMMENT='DB WorkerID Assigner for UID Generator',ENGINE = INNODB;

DROP TABLE IF EXISTS DEFINE_KEY;
DROP TABLE IF EXISTS BUSINESS_DESCRIPTION;
DROP TABLE IF EXISTS OPERATION;
DROP TABLE IF EXISTS BUSINESS;

DROP TABLE IF EXISTS BUSINESS_DEFINE;
DROP TABLE IF EXISTS BUSINESS_FILE_DEFINE;

DROP TABLE IF EXISTS BUSINESS_FILE;
DROP TABLE IF EXISTS BUSINESS_DOCUMENT;

CREATE TABLE BUSINESS
(
    ID bigint NOT NULL,
    STATUS varchar(9) NOT NULL,
    CREATE_TIME datetime NOT NULL,
    COMPLETE_TIME datetime,
    DEFINE varchar(32) NOT NULL,
    NAME varchar(32) NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;




CREATE TABLE BUSINESS_DESCRIPTION
(
    ID bigint NOT NULL,
    DESCRIPTION text NOT NULL,
    _KEYS varchar(1024),
    TAGS text,
    SOURCE VARCHAR(8) NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE OPERATION
(
    BUSINESS_ID bigint NOT NULL,
    OPERATION_TIME datetime NOT NULL,
    TYPE varchar(16) NOT NULL,
    EMP_ID varchar(32),
    EMP_NAME varchar(32) NOT NULL,
    TASK_NAME varchar(32) NULL,
    DESCRIPTION varchar(512),
    ID bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;

CREATE TABLE DEFINE_KEY
(
    BUSINESS bigint NOT NULL,
    CATEGORY varchar(16) NOT NULL,
    _KEYS varchar(1024) NOT NULL,
    PRIMARY KEY (BUSINESS, CATEGORY)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;





CREATE TABLE BUSINESS_DEFINE
(
    NAME varchar(32) NOT NULL,
    ID varchar(32) NOT NULL,
    PROCESS varchar(32),
    DESCRIPTION_TEMPLATE text NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;

CREATE TABLE BUSINESS_FILE_DEFINE
(
    BUSINESS varchar(32) NOT NULL,
    _ORDER int NOT NULL,
    NAME varchar(512) NOT NULL,
    TYPE varchar(4) NOT NULL,
    EL varchar(512) NULL,
    DESCRIPTION varchar(1024),
    PRIMARY KEY (BUSINESS, _ORDER)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;





CREATE TABLE BUSINESS_DOCUMENT
(
    NAME varchar(512) NOT NULL,
    BUSINESS_ID bigint NOT NULL,
    ID bigint NOT NULL,
    PAGE_COUNT int NOT NULL,
    NEED boolean NOT NULL,
    _ORDER int NOT NULL,
    DESCRIPTION varchar(1024) NULL,
    PRIMARY KEY (ID),
    CONSTRAINT BUSINESS_DOC_NAME_UNIQUE UNIQUE (NAME, BUSINESS_ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE BUSINESS_FILE
(
    FILE_ID bigint NOT NULL,
    _ORDER int NOT NULL,
    FILE_ITEM_ID varchar(32) NOT NULL,
    MD5 varchar(32),
    UPLOAD_TIME datetime NOT NULL,
    FILE_TYPE varchar(512) NOT NULL,
    FILE_SIZE int,
    EXT_NAME varchar(8) NULL,
    PRIMARY KEY (FILE_ITEM_ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;
/* Create Foreign Keys */
ALTER TABLE BUSINESS_FILE
    ADD FOREIGN KEY (FILE_ID)
        REFERENCES BUSINESS_DOCUMENT (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE BUSINESS_FILE_DEFINE
    ADD FOREIGN KEY (BUSINESS)
        REFERENCES BUSINESS_DEFINE (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;



ALTER TABLE BUSINESS_DESCRIPTION
    ADD FOREIGN KEY (ID)
        REFERENCES BUSINESS (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE OPERATION
    ADD FOREIGN KEY (BUSINESS_ID)
        REFERENCES BUSINESS (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE DEFINE_KEY
    ADD FOREIGN KEY (BUSINESS)
        REFERENCES BUSINESS_DESCRIPTION (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;

insert into BUSINESS_DEFINE(ID, NAME,PROCESS,DESCRIPTION_TEMPLATE) VALUES ('FIRE_CHECK','建设工程消防验收','construct-fire-check','项目名称为${name!"-"}, 面积${area!"-"}');

insert into BUSINESS_FILE_DEFINE(BUSINESS, _ORDER,NAME,DESCRIPTION, TYPE) VALUES ('FIRE_CHECK',1,'测试要件','测试','ATT');
insert into BUSINESS_FILE_DEFINE(BUSINESS, _ORDER,NAME,DESCRIPTION, TYPE) VALUES ('FIRE_CHECK',2,'测试要件1','测试','ATT');
insert into BUSINESS_FILE_DEFINE(BUSINESS, _ORDER,NAME,DESCRIPTION, TYPE) VALUES ('FIRE_CHECK',3,'测试要件2','测试','ATT');
insert into BUSINESS_FILE_DEFINE(BUSINESS, _ORDER,NAME,DESCRIPTION, TYPE) VALUES ('FIRE_CHECK',4,'测试要件3','测试','ATT');
insert into BUSINESS_FILE_DEFINE(BUSINESS, _ORDER,NAME,DESCRIPTION, TYPE) VALUES ('FIRE_CHECK',5,'测试要件4','测试','ATT');
insert into BUSINESS_FILE_DEFINE(BUSINESS, _ORDER,NAME,DESCRIPTION, TYPE) VALUES ('FIRE_CHECK',6,'测试要件5','测试','ATT');


DROP DATABASE IF EXISTS CONSTRUCT;

CREATE DATABASE CONSTRUCT;

USE CONSTRUCT;

DROP TABLE IF EXISTS DFCI;
DROP TABLE IF EXISTS DFCC;
DROP TABLE IF EXISTS DFCT;
DROP TABLE IF EXISTS DFCL;

DROP TABLE IF EXISTS FIRE_PROJECT_BUILD;
DROP TABLE IF EXISTS FIRE_CHECK_BUILD;
DROP TABLE IF EXISTS FIRE_CHECK_FIT;
DROP TABLE IF EXISTS FIRE_CHECK_REPORT;
DROP TABLE IF EXISTS FIRE_CHECK_STORE_SQUARE;
DROP TABLE IF EXISTS FIRE_CHECK_STORE_TIN;
DROP TABLE IF EXISTS FIRE_CHECK_CONTENT;
DROP TABLE IF EXISTS FIRE_CHECK_SUB_ITEM;
DROP TABLE IF EXISTS FIRE_CHECK_ITEM;
DROP TABLE IF EXISTS FIRE_CHECK_TABLE;
DROP TABLE IF EXISTS FIRE_CHECK_WARM;
DROP TABLE IF EXISTS FIRE_JOIN_CORP;
DROP TABLE IF EXISTS FIRE_PROJECT;
DROP TABLE IF EXISTS FIRE_CHECK;
DROP TABLE IF EXISTS FIRE_CHECK_INFO;
DROP TABLE IF EXISTS FIRE_FILE_CHECK;


CREATE TABLE DFCC
(
    NAME varchar(32) NOT NULL,
    _ORDER int NOT NULL,
    ID bigint NOT NULL,
    TABLE_ID bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE DFCI
(
    _ORDER int NOT NULL,
    NAME varchar(32) NOT NULL,
    ID bigint NOT NULL,
    ITEM_ID bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE DFCL
(
    _ORDER int NOT NULL,
    NAME varchar(1024) NOT NULL,
    _REQUIRE varchar(1024),
    PARENT bigint NOT NULL,
    LEVEL int NOT NULL,
    ID bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE DFCT
(
    _ORDER int NOT NULL,
    NAME varchar(32) NOT NULL,
    ID bigint NOT NULL,
    PART boolean NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


ALTER TABLE DFCI
    ADD FOREIGN KEY (ITEM_ID)
        REFERENCES DFCC (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE DFCL
    ADD FOREIGN KEY (PARENT)
        REFERENCES DFCI (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE DFCC
    ADD FOREIGN KEY (TABLE_ID)
        REFERENCES DFCT (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;



CREATE TABLE FIRE_CHECK
(
    ID bigint NOT NULL,
    STATUS varchar(11) NOT NULL,
    APPLY_TIME datetime NOT NULL,
    REG_TIME datetime,
    APPLY_TYPE varchar(16) NOT NULL,
    CORP_CODE bigint NOT NULL,
    OPINION text,
    MEMO varchar(1024),
    INFO bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_BUILD
(
    ID bigint NOT NULL,
    FIRE_RATING int NOT NULL,
    DANGER int NOT NULL,
    BUILD_CODE bigint NOT NULL,
    FIRE_CHECK bigint NOT NULL,
    OPINION text,
    PASS boolean,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_CONTENT
(
    ID bigint NOT NULL,
    NAME varchar(1024) NOT NULL,
    PARTS varchar(32),
    _REQUIRE varchar(1024),
    LEVEL int NOT NULL,
    QUALIFIED boolean NOT NULL,
    DESCRIPTION varchar(32),
    ITEM_ID bigint NOT NULL,
    _ORDER int NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_FIT
(
    ID bigint NOT NULL,
    PART varchar(10) NOT NULL,
    AREA decimal(19,2),
    LAYERS int,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_INFO
(
    PROJECT_CODE bigint NOT NULL,
    CONTACTS varchar(64),
    TEL varchar(16),
    ID bigint NOT NULL,
    IN_RANDOM boolean NOT NULL,
    FIRE_DESIGN_FILE varchar(32),
    FILE_NUMBER varchar(32),
    CONSTRUCTION_FILE varchar(32),
    CON_FILE_DATE datetime,
    DESIGN_FILE varchar(32),
    DESIGN_FILE_DATE datetime,
    USE_PROPERTY varchar(16),
    PART boolean NOT NULL,
    CONCLUSION varchar(1024),
    QUALIFIED boolean NOT NULL,
    OLD_USE varchar(16),
    SPECIAL boolean NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_ITEM
(
    ID bigint NOT NULL,
    NAME varchar(32) NOT NULL,
    _ORDER int NOT NULL,
    QUALIFIED boolean NOT NULL,
    TABLE_ID bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_REPORT
(
    NAME varchar(32) NOT NULL,
    FILE_ID varchar(32) NOT NULL,
    MD5 varchar(32),
    UPLOAD_TIME datetime NOT NULL,
    FILE_SIZE int,
    FILE_TYPE varchar(512) NOT NULL,
    FAIL boolean NOT NULL,
    BUSINESS bigint NOT NULL,
    PRIMARY KEY (FILE_ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_STORE_SQUARE
(
    ID bigint NOT NULL,
    AREA decimal(19,2),
    NAME varchar(32),
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_STORE_TIN
(
    ID bigint NOT NULL,
    LOCATION varchar(64),
    AREA decimal(19,2),
    TYPE varchar(10) NOT NULL,
    STORE_TYPE varchar(6) NOT NULL,
    NAME varchar(32),
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_SUB_ITEM
(
    ITEM_ID bigint NOT NULL,
    _ORDER int NOT NULL,
    NAME varchar(32) NOT NULL,
    COUNT int,
    FULL boolean NOT NULL,
    ID bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_TABLE
(
    NAME varchar(32) NOT NULL,
    _ORDER int NOT NULL,
    CHECK_ID bigint NOT NULL,
    ID bigint NOT NULL,
    PART boolean NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_CHECK_WARM
(
    ID bigint NOT NULL,
    TYPE varchar(2) NOT NULL,
    LAYERS int,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_JOIN_CORP
(
    CORP_CODE bigint NOT NULL,
    CORP_TYPE varchar(16) NOT NULL,
    PROJECT bigint NOT NULL,
    LEVEL int NOT NULL,
    NAME varchar(128) NOT NULL,
    REG_ID_TYPE varchar(16) NOT NULL,
    REG_ID_NUMBER varchar(32) NOT NULL,
    CONTACTS varchar(64),
    TEL varchar(16),
    OWNER_ID_NUMBER varchar(32),
    OWNER_ID_TYPE varchar(16) NOT NULL,
    OWNER_NAME varchar(32) NOT NULL,
    PRIMARY KEY (CORP_CODE, CORP_TYPE, PROJECT)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_PROJECT
(
    ID bigint NOT NULL,
    NAME varchar(256) NOT NULL,
    ADDRESS varchar(512),
    PROPERTY varchar(6),
    TYPE varchar(19) NOT NULL,
    ALL_AREA decimal(19,2),
    MAIN_PROJECT_LEVEL varchar(8) NOT NULL,
    CORPS text,
    TAGS varchar(1024),
    MODIFY_FIT boolean,
    MODIFY_WARM boolean,
    MODIFY_USE boolean,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_PROJECT_BUILD
(
    ID bigint NOT NULL,
    NAME varchar(32) NOT NULL,
    STRUCTURE varchar(16) NOT NULL,
    GROUND_FLOOR_COUNT int,
    UNDER_FLOOR_COUNT int,
    HEIGHT decimal(19,2),
    ALL_AREA decimal(19,2),
    GROUND_AREA decimal(19,2),
    UNDER_AREA decimal(19,2),
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE FIRE_FILE_CHECK
(
    ID bigint NOT NULL,
    PASS boolean NOT NULL,
    NAME varchar(64) NOT NULL,
    BUSINESS bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;

/* Create Foreign Keys */


ALTER TABLE FIRE_CHECK_REPORT
    ADD FOREIGN KEY (BUSINESS)
        REFERENCES FIRE_CHECK (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_PROJECT_BUILD
    ADD FOREIGN KEY (ID)
        REFERENCES FIRE_CHECK_BUILD (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK
    ADD FOREIGN KEY (INFO)
        REFERENCES FIRE_CHECK_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_BUILD
    ADD FOREIGN KEY (FIRE_CHECK)
        REFERENCES FIRE_CHECK_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_FIT
    ADD FOREIGN KEY (ID)
        REFERENCES FIRE_CHECK_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_STORE_SQUARE
    ADD FOREIGN KEY (ID)
        REFERENCES FIRE_CHECK_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_STORE_TIN
    ADD FOREIGN KEY (ID)
        REFERENCES FIRE_CHECK_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_TABLE
    ADD FOREIGN KEY (CHECK_ID)
        REFERENCES FIRE_CHECK_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_WARM
    ADD FOREIGN KEY (ID)
        REFERENCES FIRE_CHECK_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_PROJECT
    ADD FOREIGN KEY (ID)
        REFERENCES FIRE_CHECK_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_SUB_ITEM
    ADD FOREIGN KEY (ITEM_ID)
        REFERENCES FIRE_CHECK_ITEM (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_CONTENT
    ADD FOREIGN KEY (ITEM_ID)
        REFERENCES FIRE_CHECK_SUB_ITEM (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_CHECK_ITEM
    ADD FOREIGN KEY (TABLE_ID)
        REFERENCES FIRE_CHECK_TABLE (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE FIRE_JOIN_CORP
    ADD FOREIGN KEY (PROJECT)
        REFERENCES FIRE_PROJECT (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;

ALTER TABLE FIRE_FILE_CHECK
    ADD FOREIGN KEY (BUSINESS)
        REFERENCES FIRE_CHECK (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


DROP TABLE IF EXISTS BUSINESS_REG;
DROP TABLE IF EXISTS CONSTRUCT_CORP_REG;
DROP TABLE IF EXISTS CONSTRUCT_EMPLOYEE;
DROP TABLE IF EXISTS LOGIN;
DROP TABLE IF EXISTS CONSTRUCT_CORP;
DROP TABLE IF EXISTS CONSTRUCT_CORP_REG_INFO;
DROP TABLE IF EXISTS CONSTRUCT_PROJECT;
DROP TABLE IF EXISTS CORP_REG_BUSINESS;
DROP TABLE IF EXISTS CORP_INFO;
DROP TABLE IF EXISTS JOIN_PERSON;
DROP TABLE IF EXISTS JOIN_CORP;
DROP TABLE IF EXISTS PROJECT_INFO;


DROP TABLE IF EXISTS WORKER_NODE;
CREATE TABLE WORKER_NODE
(
    ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'auto increment id',
    HOST_NAME VARCHAR(64) NOT NULL COMMENT 'host name',
    PORT VARCHAR(64) NOT NULL COMMENT 'port',
    TYPE INT NOT NULL COMMENT 'node type: CONTAINER(1), ACTUAL(2), FAKE(3)',
    LAUNCH_DATE DATE NOT NULL COMMENT 'launch date',
    MODIFIED TIMESTAMP NOT NULL COMMENT 'modified time',
    CREATED TIMESTAMP NOT NULL COMMENT 'created time',
    PRIMARY KEY(ID)
)
COMMENT='DB WorkerID Assigner for UID Generator',ENGINE = INNODB;

/* Create Tables */

CREATE TABLE BUSINESS_REG
(
    CORP_TYPE varchar(16) NOT NULL,
    BUSINESS_ID bigint NOT NULL,
    REG_ID bigint NOT NULL,
    -- DELETE
    -- MODIFY
    -- CREATE
    -- QUOTED
    OPERATE varchar(6) NOT NULL COMMENT 'DELETE
MODIFY
CREATE
QUOTED',
    PRIMARY KEY (CORP_TYPE, BUSINESS_ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE CONSTRUCT_CORP
(
    CORP_CODE bigint NOT NULL,
    CORP_INFO bigint NOT NULL,
    ENABLE boolean NOT NULL,
    TYPES varchar(128) NOT NULL,
    DATA_TIME timestamp NOT NULL,
    PRIMARY KEY (CORP_CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE CONSTRUCT_CORP_REG
(
    CORP_CODE bigint NOT NULL,
    CORP_TYPE varchar(16) NOT NULL,
    REG_ID bigint NOT NULL,
    PRIMARY KEY (CORP_CODE, CORP_TYPE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE CONSTRUCT_CORP_REG_INFO
(
    REG_DATE_TO date NOT NULL,
    REG_TIME datetime NOT NULL,
    LEVEL int,
    LEVEL_NUMBER varchar(32),
    ID bigint NOT NULL,
    PREVIOUS bigint,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE CONSTRUCT_EMPLOYEE
(
    IDENTIFY_TYPE varchar(16) NOT NULL,
    IDENTIFY_NUMBER varchar(32),
    NAME varchar(64) NOT NULL,
    TEL varchar(16),
    CORP_CODE bigint NOT NULL,
    DATA_TIME timestamp NOT NULL,
    MANAGER boolean NOT NULL,
    USERNAME varchar(32) NOT NULL,
    ID bigint NOT NULL,
    VALID boolean NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE CORP_INFO
(
    ID bigint NOT NULL,
    REG_ID_TYPE varchar(16) NOT NULL,
    REG_ID_NUMBER varchar(32) NOT NULL,
    OWNER_NAME varchar(32) NOT NULL,
    OWNER_ID_TYPE varchar(16) NOT NULL,
    OWNER_ID_NUMBER varchar(32),
    ADDRESS varchar(256),
    TEL varchar(16),
    NAME varchar(128) NOT NULL,
    PREVIOUS bigint,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE CORP_REG_BUSINESS
(
    BUSINESS_ID bigint NOT NULL,
    CORP_CODE bigint NOT NULL,
    CREATE_TIME datetime NOT NULL,
    REG_TIME datetime NOT NULL,
    -- OLD
    -- OLE
    -- BIZ
    SOURCE varchar(8) NOT NULL COMMENT 'OLD
OLE
BIZ',
    STATUS varchar(8),
    INFO boolean NOT NULL,
    CORP_INFO bigint NOT NULL,
    TAGS varchar(512),
    APPLY_TIME datetime,
    PRIMARY KEY (BUSINESS_ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;





/* Create Foreign Keys */

ALTER TABLE CONSTRUCT_CORP_REG
    ADD FOREIGN KEY (CORP_CODE)
        REFERENCES CONSTRUCT_CORP (CORP_CODE)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CONSTRUCT_EMPLOYEE
    ADD FOREIGN KEY (CORP_CODE)
        REFERENCES CONSTRUCT_CORP (CORP_CODE)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE BUSINESS_REG
    ADD FOREIGN KEY (REG_ID)
        REFERENCES CONSTRUCT_CORP_REG_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CONSTRUCT_CORP_REG
    ADD FOREIGN KEY (REG_ID)
        REFERENCES CONSTRUCT_CORP_REG_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CONSTRUCT_CORP_REG_INFO
    ADD FOREIGN KEY (PREVIOUS)
        REFERENCES CONSTRUCT_CORP_REG_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CONSTRUCT_CORP
    ADD FOREIGN KEY (CORP_INFO)
        REFERENCES CORP_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CORP_INFO
    ADD FOREIGN KEY (PREVIOUS)
        REFERENCES CORP_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CORP_REG_BUSINESS
    ADD FOREIGN KEY (CORP_INFO)
        REFERENCES CORP_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE BUSINESS_REG
    ADD FOREIGN KEY (BUSINESS_ID)
        REFERENCES CORP_REG_BUSINESS (BUSINESS_ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;

ALTER TABLE CONSTRUCT_EMPLOYEE
    ADD FOREIGN KEY (CORP_CODE)
        REFERENCES CONSTRUCT_CORP (CORP_CODE)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


DROP TABLE IF EXISTS BUILD;
DROP TABLE IF EXISTS BUILD_REG_AND_INFO;
DROP TABLE IF EXISTS BUILD_INFO;
DROP TABLE IF EXISTS BUILD_REG;

DROP TABLE IF EXISTS CONSTRUCT_PROJECT;
DROP TABLE IF EXISTS PROJECT_INFO_REG;
DROP TABLE IF EXISTS PROJECT_JOIN_PERSON;
DROP TABLE IF EXISTS PROJECT_JOIN_CORP;
DROP TABLE IF EXISTS PROJECT_JOIN_CORP_INFO;
DROP TABLE IF EXISTS PROJECT_JOIN_REG;
DROP TABLE IF EXISTS PROJECT_REG;




/* Create Tables */

DROP TABLE IF EXISTS WORKER_NODE;
CREATE TABLE WORKER_NODE
(
    ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'auto increment id',
    HOST_NAME VARCHAR(64) NOT NULL COMMENT 'host name',
    PORT VARCHAR(64) NOT NULL COMMENT 'port',
    TYPE INT NOT NULL COMMENT 'node type: CONTAINER(1), ACTUAL(2), FAKE(3)',
    LAUNCH_DATE DATE NOT NULL COMMENT 'launch date',
    MODIFIED TIMESTAMP NOT NULL COMMENT 'modified time',
    CREATED TIMESTAMP NOT NULL COMMENT 'created time',
    PRIMARY KEY(ID)
)
COMMENT='DB WorkerID Assigner for UID Generator',ENGINE = INNODB;



CREATE TABLE BUILD
(
    BUILD_CODE bigint NOT NULL,
    INFO bigint NOT NULL,
    REG_TIME datetime NOT NULL,
    PROJECT_CODE bigint NOT NULL,
    ENABLE boolean NOT NULL,
    VERSION int NULL,
    PRIMARY KEY (BUILD_CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE BUILD_INFO
(
    ID bigint NOT NULL,
    NAME varchar(32),
    STRUCTURE varchar(16) NOT NULL,
    GROUND_FLOOR_COUNT int,
    UNDER_FLOOR_COUNT int,
    HEIGHT decimal(19,2),
    ALL_AREA decimal(19,2),
    GROUND_AREA decimal(19,2),
    UNDER_AREA decimal(19,2),
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE BUILD_REG
(
    ID bigint NOT NULL,
    REG_TIME datetime,
    COUNT int NOT NULL,
    ON_AREA decimal(19,2) NOT NULL,
    UNDER_AREA decimal(19,2) NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE BUILD_REG_AND_INFO
(
    ID bigint NOT NULL,
    REG bigint NOT NULL,
    -- DELETE
    -- MODIFY
    -- CREATE
    -- QUOTED
    OPERATE varchar(6) NOT NULL COMMENT 'DELETE
MODIFY
CREATE
QUOTED',
    BUILD_INFO bigint NOT NULL,
    PREVIOUS bigint NULL,
    BUILD_CODE bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE CONSTRUCT_PROJECT
(
    PROJECT_CODE bigint NOT NULL,
    ENABLE boolean NOT NULL,
    INFO bigint NOT NULL,
    CORP bigint NOT NULL,
    DEVELOPER bigint NOT NULL,
    REG_TIME datetime NOT NULL,
    BUILD bigint NOT NULL,
    PRIMARY KEY (PROJECT_CODE)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;



CREATE TABLE PROJECT_INFO_REG
(
    ID bigint NOT NULL,
    REG_TIME datetime,
    PREVIOUS bigint,
    PROPERTY varchar(6) NOT NULL,
    NAME varchar(256) NOT NULL,
    ADDRESS varchar(512) NOT NULL,
    TYPE varchar(19) NOT NULL,
    TYPE_LEVEL int,
    ALL_AREA decimal(19,2),
    BEGIN_DATE date,
    COMPLETED_DATE date,
    TENDER varchar(32),
    COSTS decimal(18,2),
    MAIN_PROJECT_LEVEL varchar(8) NOT NULL,
    MAIN_PROJECT_FILE varchar(32),
    MODIFY_FIT boolean NULL,
    MODIFY_WARM boolean NULL,
    MODIFY_USE boolean NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE PROJECT_JOIN_CORP
(
    JOIN_ID bigint NOT NULL,
    OUTSIDE_TEAM_FILE varchar(32),
    OUT_LEVEL boolean,
    OUT_LEVEL_FILE varchar(32),
    CORP_CODE bigint NOT NULL,
    CORP_TYPE varchar(16) NOT NULL,
    CONTACTS varchar(64),
    TEL varchar(16),
    REG bigint NOT NULL,
    PRIMARY KEY (JOIN_ID),
    CONSTRAINT UNIQUE_CORP_PROPERTY_REG UNIQUE (CORP_CODE, CORP_TYPE, REG)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE PROJECT_JOIN_CORP_INFO
(
    NAME varchar(128) NOT NULL,
    REG_ID_TYPE varchar(16) NOT NULL,
    REG_ID_NUMBER varchar(32) NOT NULL,
    LEVEL int NOT NULL,
    JOIN_ID bigint NOT NULL,
    OWNER_ID_TYPE varchar(16) NOT NULL,
    OWNER_ID_NUMBER varchar(32),
    OWNER_NAME varchar(32),
    PRIMARY KEY (JOIN_ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE PROJECT_JOIN_PERSON
(
    JOIN_ID bigint NOT NULL,
    CORP bigint NOT NULL,
    JOIN_TYPE varchar(16) NOT NULL,
    LEVEL varchar(8),
    JOB varchar(32) NOT NULL,
    NAME varchar(64) NOT NULL,
    IDENTIFY_TYPE varchar(16) NOT NULL,
    IDENTIFY_NUMBER varchar(32) NOT NULL,
    PRIMARY KEY (JOIN_ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE PROJECT_JOIN_REG
(
    ID bigint NOT NULL,
    PREVIOUS bigint,
    REG_TIME datetime,
    TAGS varchar(1024),
    CORPS text,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;


CREATE TABLE PROJECT_REG
(
    CREATE_TIME datetime NOT NULL,
    REG_TIME datetime,
    APPLY_TIME datetime,
    -- OLD
    -- OLE
    -- BIZ
    SOURCE varchar(8) NOT NULL COMMENT 'OLD
OLE
BIZ',
    STATUS varchar(8) NOT NULL,
    TAGS varchar(1024),
    PROJECT_CODE bigint NOT NULL,
    ID bigint NOT NULL,
    TYPE varchar(7) NOT NULL,
    CORP_MASTER boolean NOT NULL,
    INFO_MASTER boolean NOT NULL,
    BUILD_MASTER boolean NOT NULL,
    INFO bigint NOT NULL,
    CORP bigint NOT NULL,
    BUILD bigint NOT NULL,
    PRIMARY KEY (ID)
) ENGINE = InnoDB DEFAULT CHARACTER SET utf8;



/* Create Foreign Keys */

ALTER TABLE BUILD
    ADD FOREIGN KEY (INFO)
        REFERENCES BUILD_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE BUILD_REG_AND_INFO
    ADD FOREIGN KEY (BUILD_INFO)
        REFERENCES BUILD_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE BUILD_REG_AND_INFO
    ADD FOREIGN KEY (PREVIOUS)
        REFERENCES BUILD_INFO (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE BUILD_REG_AND_INFO
    ADD FOREIGN KEY (REG)
        REFERENCES BUILD_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CONSTRUCT_PROJECT
    ADD FOREIGN KEY (BUILD)
        REFERENCES BUILD_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE PROJECT_REG
    ADD FOREIGN KEY (BUILD)
        REFERENCES BUILD_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;

ALTER TABLE CONSTRUCT_PROJECT
    ADD FOREIGN KEY (INFO)
        REFERENCES PROJECT_INFO_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE PROJECT_INFO_REG
    ADD FOREIGN KEY (PREVIOUS)
        REFERENCES PROJECT_INFO_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE PROJECT_REG
    ADD FOREIGN KEY (INFO)
        REFERENCES PROJECT_INFO_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CONSTRUCT_PROJECT
    ADD FOREIGN KEY (DEVELOPER)
        REFERENCES PROJECT_JOIN_CORP (JOIN_ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE PROJECT_JOIN_CORP_INFO
    ADD FOREIGN KEY (JOIN_ID)
        REFERENCES PROJECT_JOIN_CORP (JOIN_ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE PROJECT_JOIN_PERSON
    ADD FOREIGN KEY (CORP)
        REFERENCES PROJECT_JOIN_CORP (JOIN_ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE CONSTRUCT_PROJECT
    ADD FOREIGN KEY (CORP)
        REFERENCES PROJECT_JOIN_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE PROJECT_JOIN_CORP
    ADD FOREIGN KEY (REG)
        REFERENCES PROJECT_JOIN_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE PROJECT_JOIN_REG
    ADD FOREIGN KEY (PREVIOUS)
        REFERENCES PROJECT_JOIN_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;


ALTER TABLE PROJECT_REG
    ADD FOREIGN KEY (CORP)
        REFERENCES PROJECT_JOIN_REG (ID)
        ON UPDATE RESTRICT
        ON DELETE RESTRICT
;